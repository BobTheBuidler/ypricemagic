name: PyTest

on:
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master, dev ]
    paths:
      - '**.py'
      - '**/pytest.yaml'
  workflow_dispatch:
      
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    #timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        pyversion: [ "3.10", "3.11", "3.12" ]
        network: [ mainnet, bsc-main, polygon-main, ftm-main, arbitrum-main, optimism-main ]
        include:
        - os: ubuntu-latest
          path: ~/.cache/pip
        - os: macos-latest
          path: ~/Library/Caches/pip
        - os: windows-latest
          path: ~\AppData\Local\pip\Cache
        - network: mainnet
          provider: WEB3_PROVIDER
        - network: bsc-main
          provider: BSC_WEB3_PROVIDER
        - network: polygon-main
          provider: POLY_WEB3_PROVIDER
        - network: ftm-main
          provider: FTM_WEB3_PROVIDER
        - network: arbitrum-main
          provider: ARBI_WEB3_PROVIDER
        - network: optimism-main
          provider: OPTI_WEB3_PROVIDER

    steps:
      - name: Check out repository code
        uses: actions/checkout@v5

      - name: Setup Python (faster than using Python container)
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.pyversion }}
          cache: pip
          cache-key:
            requirements.txt
            requirements-dev.txt

      - name: Restore ydb cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.HOME }}/.ypricemagic/ypricemagic.sqlite
          key: ydb-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}

      - name: Restore joblib middleware cache
        uses: actions/cache/restore@v4
        with:
          path: ./cache/*/joblib/web3/middleware/filter/middleware
          # Include requirements.txt so we recache if web3 version changes
          key: ${{ runner.os }}-${{ hashFiles('**/middleware.py') }}-${{ hashFiles('**/requirements.txt') }}
      
      - name: Restore compilers cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ env.HOME }}/.solcx
            ${{ env.HOME }}/.vvm
          key: compilers-${{ runner.os }}
      
      - name: Restore brownie contracts db
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.HOME }}/.brownie/deployments.db
          key: brownie-${{ runner.os }}

      - name: Install dependencies
        run: pip install . -r requirements-dev.txt
      
      - name: Setup brownie networks
        run: brownie networks modify ${{ matrix.network }} host=${{ secrets[matrix.provider] }}
        continue-on-error: true
      
      - name: Run test suite
        env:
          BROWNIE_NETWORK: ${{ matrix.network }}
          # Explorer tokens for all chains:
          ETHERSCAN_TOKEN: ${{ secrets.ETHERSCAN_TOKEN }}
          BSCSCAN_TOKEN: ${{ secrets.BSCSCAN_TOKEN }}
          POLYGONSCAN_TOKEN: ${{ secrets.POLYGONSCAN_TOKEN }}
          FTMSCAN_TOKEN: ${{ secrets.FTMSCAN_TOKEN }}
          ARBISCAN_TOKEN: ${{ secrets.ARBISCAN_TOKEN }}
          OPTISCAN_TOKEN: ${{ secrets.OPTISCAN_TOKEN }}
        run: make test
        timeout-minutes: 180
      
      - name: Save ydb cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: ${{ env.HOME }}/.ypricemagic/ypricemagic.sqlite
          key: ydb-${{ runner.os }}-${{ matrix.network }}-${{ hashFiles('**/requirements.txt') }}

      - name: Save joblib middleware cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: ./cache/*/joblib/web3/middleware/filter/middleware
          # Include requirements.txt so we recache if web3 version changes
          key: ${{ runner.os }}-${{ matrix.network }}-${{ hashFiles('**/middleware.py') }}-${{ hashFiles('**/requirements.txt') }}
      
      - name: Save compilers cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ env.HOME }}/.solcx
            ${{ env.HOME }}/.vvm
          key: compilers-${{ runner.os }}
      
      - name: Save brownie contracts db
        if: always()
        uses: actions/cache/save@v4
        with:
          path: ${{ env.HOME }}/.brownie/deployments.db
          key: brownie-${{ runner.os }}